pipeline {
    agent any

    environment {
        AWS_REGION = 'eu-west-2'
        ECR_REPOSITORY = '160071257600.dkr.ecr.eu-west-2.amazonaws.com'
        IMAGE_NAME = 'sample-ecr'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Install Dependencies') {
            steps {

                echo 'Installing Python dependencies...'
                sh '''
                pwd
                cd ./app
                pip3 install --break-system-packages -r requirements.txt
                '''  // Using pip3 in case Python3 is installed by default
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running tests...'
                // Example of running tests using pytest
                //sh 'pytest tests/'
            }
        }

        stage('Build Docker Image') {
            steps {
                    withCredentials([string(credentialsId: 'aws_creds_txt', variable: 'SECRET_TEXT')]) {
                        script {
                            // Now you can use the SECRET_TEXT variable
                            echo "-----The secret text -------"
                            sh '''
                            mkdir /home/jenkins/.aws
                            echo ${SECRET_TEXT} > /home/jenkins//.aws/credentials
                            echo "The secret text is: ${SECRET_TEXT}"
                            echo ${SECRET_TEXT} > aws_creds.sh
                            cat aws_creds.sh
                            aws s3 ls
                            '''
                            // sh '''
                            // export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
                            // export ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                            // export IMAGE_URL=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

                            // # Authenticate with ECR
                            // aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
                            // export IMAGE_URL=${ECR_REPOSITORY}/${IMAGE_NAME}:${IMAGE_TAG}
                
                            // cd ./app
                            // /kaniko/executor \
                            //     --context `pwd` \
                            //     --dockerfile `pwd`/Dockerfile --no-push\
                            //     --destination ${IMAGE_URL} \
                            // '''
                            
                        }
                    }
                }
        }

        // stage('Push Docker Image to ECR') {
        //     steps {
        //         echo 'Pushing Docker image to ECR...'
        //         sh "docker push <aws_account_id>.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}"
        //     }
        // }
    }

    post {
        always {
            echo 'Cleaning up Docker images...'
            sh 'docker rmi $(docker images -f "dangling=true" -q) || true'
        }

        success {
            echo 'Pipeline completed successfully!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}
